/* drivers/input/touchscreen/novatek/test.h
 *
 * Copyright (C) 2010 - 2014 Novatek, Inc.
 * 
 * History:
 * V1.0 : First Released
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 */
 
#ifndef 	_LINUX_NVT_TOUCH_TEST_H
#define _LINUX_NVT_TOUCH_TEST_H

//Open Test Parameters
#define IPOSTIVE_TOLERANCE 320
#define ITOLERANCE_S 320
#define IDIFF_LIMITG	-270

//Uniformity Test Parameters
#define IUNIFORMITY 600

//ABS Limit Test Parameters
#define IABSLIMIT_MAX 27000
#define IABSLIMIT_MIN 900

//Color Code
#define WHITE		0x00
#define RED			0x01
#define YELLOW		0x02
#define BULE 		0x03
#define PUROPLE 		0x04
#define TEAL			0x05

typedef struct{
	unsigned short tx;
	unsigned short rx;
	signed short flag;
}mapping_t;

//---Sensor Mapping---
char AIN[90]={	
	10,11,12,13,14,15,16,17,18, 9,
	8, 7, 6, 5, 4,59,58,57,54,55,
	56,51,52,53,50,49,48,47,46,45,
	44,43,42,41,40,39,38,37,36,35,
	34,33, 1, 2, 3
};

//---FPC Golden Sample---
int FPC_CM[40*40]={
	613,696,705,726,800,749,722,672,793,745,695,741,726,722,722,718,731,506,
	516,648,772,691,763,734,686,651,730,719,645,710,692,803,680,679,648,490,
	519,638,673,699,855,765,699,745,661,784,651,719,704,707,696,770,649,484,
	678,665,664,692,777,761,814,633,637,726,691,719,696,702,692,652,700,649,
	703,683,700,690,866,745,720,649,699,788,687,752,690,688,680,780,748,690,
	699,714,772,722,796,785,759,668,749,741,703,770,723,835,723,714,668,741,
	640,823,696,726,898,788,788,679,826,816,757,773,878,787,765,820,724,745,
	652,698,695,713,757,741,850,660,702,722,704,761,707,687,708,672,710,691,
	657,660,663,706,773,758,753,648,683,730,707,775,692,708,730,669,774,647,
	648,653,673,714,773,758,759,700,703,726,706,776,718,765,760,823,703,649,
	637,773,691,752,757,744,740,706,775,718,702,757,748,774,746,706,706,699,
	633,750,695,865,795,788,897,730,758,742,760,881,793,795,787,723,735,754,
	640,761,706,800,796,892,780,741,754,741,873,772,796,870,795,775,735,850,
	645,699,727,858,762,738,735,710,703,718,703,760,752,753,749,811,707,689,
	629,730,723,718,776,757,752,704,775,726,707,777,764,776,762,765,704,637,
	694,660,730,822,777,757,760,707,706,727,707,776,766,773,760,761,707,625,
	648,699,765,754,760,847,738,711,707,722,811,761,754,754,741,741,710,753,
	645,760,766,800,796,788,787,815,764,741,762,770,869,792,788,858,741,684,
	652,765,780,801,800,793,795,741,770,742,764,775,793,789,859,788,739,679,
	722,706,769,758,761,753,741,785,710,717,703,761,826,749,741,741,710,634,
	630,660,836,719,777,869,765,710,713,726,812,777,764,772,757,762,703,740,
	637,660,729,719,885,757,757,780,718,831,703,777,835,773,762,758,702,628,
	661,706,877,758,766,741,741,721,721,719,699,764,752,757,811,744,710,629,
	730,765,780,808,800,784,785,750,788,738,757,773,795,792,791,788,848,673,
	663,765,1013,820,816,797,800,779,1374,741,772,823,811,801,796,806,762,676,
	660,710,776,775,845,757,749,741,812,845,703,769,765,772,750,757,831,636,
	633,672,748,748,784,765,835,722,741,726,710,855,815,776,832,773,719,624,
};

//---Module Golden Sample---
long int Mutual_AVG[40*40]={
	1640,1663,1552,1568,1584,1640,1666,1633,1562,1855,1745,1780,1662,1717,1730,1754,1805,1873,
	2044,2065,1774,1915,1917,1927,1932,1928,1846,2058,2118,2147,2134,2062,2096,2116,2194,2259,
	4332,3823,3646,3543,3403,3557,3623,3474,3551,3628,3746,3761,3641,3682,3811,3687,3959,4561,
	3874,3914,3592,3607,3628,3620,3512,3643,3655,3790,3834,3890,3894,3865,3848,3871,3969,4118,
	1910,2147,1920,1872,1783,1871,1897,1893,1880,1998,2105,2192,2117,2250,2186,2123,2199,2123,
	1569,1692,1444,1602,1547,1564,1593,1719,1567,1819,1726,1770,1689,1705,1761,1887,1969,1602,
	1690,1753,1661,1652,1491,1707,1610,1714,1530,1820,1888,1787,1549,1881,1737,1692,1857,1606,
	2185,2318,1812,1916,1890,1872,1762,2008,1867,2336,2330,2118,2068,2214,2100,2262,2268,2031,
	4220,4231,3831,3846,3832,3857,3811,3930,3895,4123,4194,4033,4102,4105,4013,4056,4151,4305,
	4569,4507,3997,4080,4015,4031,3972,4133,4037,4233,4257,4238,4179,4137,4152,4158,4335,4395,
	2401,2498,1876,1943,1952,2030,1930,1953,1857,2379,2316,2161,2146,2224,2155,2181,2289,2078,
	1818,1948,1588,1648,1617,1633,1522,1692,1615,2344,1795,1615,1587,1710,1737,1735,1869,1550,
	2008,2128,1656,1686,1692,1601,1713,1756,1761,2160,2078,1718,1689,1675,1700,1715,1810,1385,
	2670,2837,1918,1984,1986,1966,1970,1984,1963,2790,2791,1999,2004,2002,1976,1991,2046,1836,
	4925,4884,4320,4339,4274,4392,4239,4318,4220,4683,4716,4284,4271,4265,4283,4304,4443,4630,
	5197,5205,4509,4517,4449,4463,4409,4490,4448,4984,5034,4460,4534,4435,4461,4481,4618,4726,
	3034,3259,2056,2070,2072,1943,2053,2067,2094,3128,3144,2084,2086,2092,2064,2077,2121,1963,
	2201,2312,1741,1740,1743,1762,1866,1728,1723,2325,2281,1782,1687,1760,1763,1769,1857,1603,
	2395,2573,1815,1792,1899,1813,1807,1859,1760,2515,2475,1828,1820,1819,1764,1821,1911,1777,
	3265,3489,2084,2091,2099,2067,2182,2017,2035,3435,3457,2106,2105,2127,2081,2097,2141,2015,
	5624,5546,4596,4703,4639,4545,4592,4674,4687,5311,5366,4645,4655,4639,4711,4666,4814,4829,
	5984,5884,4936,4870,4696,4815,4867,4774,4767,5655,5744,4858,4797,4856,4872,4832,5087,5141,
	3751,3881,2047,2162,2270,2145,2147,2156,2083,3867,3908,2222,2238,2247,2225,2164,2212,2103,
	2529,2707,1856,1832,1839,1860,1857,1895,1769,2737,2746,1931,1984,1921,1940,1906,1839,1732,
	2392,2408,1689,1892,1900,1927,1923,2039,1233,2387,2437,2016,1980,1990,2062,1927,2010,1789,
	3071,3219,2285,2226,2165,2217,2214,2214,2044,3095,3240,2295,2305,2317,2234,2232,2281,2176,
	5814,5696,5060,5062,5088,5028,4896,5042,4947,5407,5578,4998,5041,5074,4960,5042,5183,5342,
};


extern struct i2c_client *nvt_client;
extern struct nvt_ts_data *ts;

extern void nvt_hw_reset(void);
extern int update_firmware(u8 *fw_data);
extern int nvt_i2c_read(struct i2c_client *client, uint8_t address, uint8_t *buf, uint8_t len);
extern void nvt_i2c_write (struct i2c_client *client, uint8_t address, uint8_t *data, uint8_t len);

#endif /* _LINUX_NVT_TOUCH_H */
